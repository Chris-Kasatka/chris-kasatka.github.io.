{"version":3,"sources":["utils.js","PercentageBar.js","App.js","reportWebVitals.js","index.js"],"names":["formatDate","str","Date","toLocaleDateString","undefined","weekday","day","month","windDirection","direction","N","react_default","a","createElement","index_es","icon","faLocationArrow","transform","rotate","NNE","NE","ENE","E","ESE","SE","SSE","S","SSW","SW","WSW","W","WNW","NW","NNW","PercentageBar","props","bgcolor","completed","fillerStyles","height","width","concat","backgroundColor","borderRadius","textAlign","style","App","_useState","useState","_useState2","Object","slicedToArray","city","setCity","_useState3","_useState4","temp","setTemp","_useState5","_useState6","condition","setCondition","_useState7","_useState8","time","setTime","_useState9","_useState10","foundCities","setFoundCities","_useState11","_useState12","setIcon","_useState13","_useState14","setDay","_useState15","_useState16","wind","setWind","_useState17","_useState18","humidity","setHumidity","_useState19","_useState20","visibility","setVisibility","_useState21","_useState22","air","setAir","_useState23","_useState24","setDirection","getCities","_ref","asyncToGenerator","_regeneratorRuntime","mark","_callee","res","countriesArr","citiesArr","citiesAll","wrap","_context","prev","next","axios","get","sent","data","map","Arr","cities","flat","stop","apply","this","arguments","useEffect","_useState25","_useState26","name","setName","_useState27","_useState28","foundUsers","setFoundUsers","filter","e","keyword","target","value","results","user","toLowerCase","startsWith","getData","_ref2","_callee2","res2","_context2","IPv4","location","region","_x","getCurr","_ref3","_callee3","tim","today","_context3","current","temp_c","text","localtime","slice","is_day","wind_mph","vis_miles","pressure_mb","wind_dir","getFut","_ref4","_callee4","forecastArr","forecastObj","_context4","forecast","forecastday","forecastDate","date","dateStr","className","alt","src","mintemp_c","maxtemp_c","abrupt","handleClick","_ref5","_callee5","event","_context5","_x2","type","id","onChange","onClick","placeholder","faLocationCrosshairs","length","react_outside_click_handler_default","onOutsideClick","faLocationDot","src_PercentageBar","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.9c763155.chunk.js","sourcesContent":["import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLocationArrow } from \"@fortawesome/free-solid-svg-icons\";\nimport React from \"react\";\n\nexport const formatDate = (str) => {\n  const date = new Date(str);\n  const options = { weekday: \"long\", day: \"numeric\", month: \"long\" };\n\n  const dateStr = date.toLocaleDateString(undefined, options);\n\n  return dateStr;\n};\n\n/*We create a const that receives an object and each of its properties.\n       will be the values corresponding to our types*/\n\nexport const windDirection = (direction) => {\n  const windDirections = {\n    N: <FontAwesomeIcon icon={faLocationArrow} transform={{ rotate: -45 }} />,\n    NNE: (\n      <FontAwesomeIcon icon={faLocationArrow} transform={{ rotate: -22.5 }} />\n    ),\n    NE: <FontAwesomeIcon icon={faLocationArrow} />,\n    ENE: (\n      <FontAwesomeIcon icon={faLocationArrow} transform={{ rotate: 22.5 }} />\n    ),\n    E: <FontAwesomeIcon icon={faLocationArrow} transform={{ rotate: 45 }} />,\n    ESE: (\n      <FontAwesomeIcon icon={faLocationArrow} transform={{ rotate: 67.5 }} />\n    ),\n    SE: <FontAwesomeIcon icon={faLocationArrow} transform={{ rotate: 90 }} />,\n    SSE: (\n      <FontAwesomeIcon icon={faLocationArrow} transform={{ rotate: 112.5 }} />\n    ),\n    S: <FontAwesomeIcon icon={faLocationArrow} transform={{ rotate: 135 }} />,\n    SSW: (\n      <FontAwesomeIcon icon={faLocationArrow} transform={{ rotate: 157.5 }} />\n    ),\n    SW: <FontAwesomeIcon icon={faLocationArrow} transform={{ rotate: 180 }} />,\n    WSW: (\n      <FontAwesomeIcon icon={faLocationArrow} transform={{ rotate: 202.5 }} />\n    ),\n    W: <FontAwesomeIcon icon={faLocationArrow} transform={{ rotate: 225 }} />,\n    WNW: (\n      <FontAwesomeIcon icon={faLocationArrow} transform={{ rotate: 247.5 }} />\n    ),\n    NW: <FontAwesomeIcon icon={faLocationArrow} transform={{ rotate: 270 }} />,\n    NNW: (\n      <FontAwesomeIcon icon={faLocationArrow} transform={{ rotate: 292.5 }} />\n    ),\n  };\n  return windDirections[direction];\n};\n","import React from \"react\";\nconst PercentageBar = (props) => {\n  const { bgcolor, completed } = props;\n\n  const containerStyles = {\n    height: 20,\n    width: \"80%\",\n    backgroundColor: \"#e0e0de\",\n    borderRadius: 50,\n  };\n\n  const fillerStyles = {\n    height: \"100%\",\n    width: `${completed}%`,\n    backgroundColor: bgcolor,\n    borderRadius: \"inherit\",\n    textAlign: \"right\",\n  };\n\n  return (\n    <div style={containerStyles}>\n      <div style={fillerStyles}></div>\n    </div>\n  );\n};\n\nexport default PercentageBar;\n","import \"./App.css\";\nimport { formatDate, windDirection } from \"./utils\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faLocationCrosshairs,\n  faLocationDot,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nimport OutsideClickHandler from \"react-outside-click-handler\";\nimport PercentageBar from \"./PercentageBar\";\n\nfunction App() {\n  const [city, setCity] = useState(\"\");\n  const [temp, setTemp] = useState(\"\");\n  const [condition, setCondition] = useState(\"\");\n  const [time, setTime] = useState(\"\");\n  const [foundCities, setFoundCities] = useState(\"\");\n  const [icon, setIcon] = useState(\"\");\n  const [day, setDay] = useState([]);\n  const [wind, setWind] = useState(\"\");\n  const [humidity, setHumidity] = useState(\"\");\n  const [visibility, setVisibility] = useState(\"\");\n  const [air, setAir] = useState(\"\");\n  const [direction, setDirection] = useState(\"\");\n\n  // GET ALL THE CITIES OF THE WORLD:\n  const getCities = async () => {\n    const res = await axios.get(\n      \"https://countriesnow.space/api/v0.1/countries\"\n    );\n    const countriesArr = res.data.data;\n    const citiesArr = countriesArr.map((Arr) => Arr.cities);\n    const citiesAll = citiesArr.flat();\n    setFoundCities(citiesAll);\n  };\n  useEffect(() => {\n    getCities();\n  }, []);\n  const [name, setName] = useState(\"\");\n  // the search result\n  const [foundUsers, setFoundUsers] = useState(\"\");\n  const filter = (e) => {\n    const keyword = e.target.value;\n    if (keyword !== \"\") {\n      const results = foundCities.filter((user) => {\n        return user.toLowerCase().startsWith(keyword.toLowerCase());\n        // Use the toLowerCase() method to make it case-insensitive\n      });\n      setFoundUsers(results);\n    } else {\n      setFoundUsers(\"\");\n    }\n    setName(keyword);\n  };\n\n  // GET CURRENT LOCATION:\n  const getData = async (e) => {\n    const res = await axios.get(\"https://geolocation-db.com/json/\");\n    const res2 =\n      await axios.get(`https://api.weatherapi.com/v1/current.json?key=e5a89a85ae524d618b391623223006&q=${res.data.IPv4}&aqi=yes\n    `);\n    setName(\"\");\n    res.data.city === null\n      ? setCity(res2.data.location.region)\n      : setCity(res.data.city);\n  };\n  useEffect(() => {\n    getData();\n  }, []);\n\n  // GET CURRENT LOCATION INFO:\n  const getCurr = async () => {\n    const res =\n      await axios.get(`https://api.weatherapi.com/v1/current.json?key=e5a89a85ae524d618b391623223006&q=${city}&aqi=no\n    `);\n\n    setTemp(res.data.current.temp_c);\n    setCondition(res.data.current.condition.text);\n    const tim = res.data.location.localtime.slice(0, 10);\n\n    const today = formatDate(tim);\n    setTime(today);\n\n// Whether to show day condition icon or night icon\n//     is_day:\t1 = Yes, 0 = No\n\nres.data.current.is_day === 1 ? \nsetIcon(\n  `http://cdn.weatherapi.com/weather/128x128/day/${res.data.current.condition.icon.slice(\n    39,\n    42\n  )}.png`\n) : setIcon(\n  `http://cdn.weatherapi.com/weather/128x128/night/${res.data.current.condition.icon.slice(\n    41,\n    44\n  )}.png`\n)\n\n\n    // setIcon(res.data.current.condition.icon)\n    setWind(res.data.current.wind_mph);\n    setHumidity(res.data.current.humidity);\n    setVisibility(res.data.current.vis_miles);\n    setAir(res.data.current.pressure_mb);\n    setDirection(res.data.current.wind_dir);\n  };\n  useEffect(() => {\n    if (city !== \"\" && city !== \" \" && city !== null && city !== undefined)\n      getCurr();\n  });\n\n  // GET FUTURE FORECAST:\n  const getFut = async () => {\n    const res = await axios.get(\n      `https://api.weatherapi.com/v1/forecast.json?key=e5a89a85ae524d618b391623223006&q=${city}&days=5&aqi=no&alerts=no`\n    );\n    // const res2 = await axios.get(\n    //   \"https://www.weatherapi.com/docs/weather_conditions.json\"\n    // );\n    // const res2Arr = Array.from(res2.data);\n    // const res2Mappd = res2Arr.map((i) => i.icon);\n    // console.log(res2Mappd);\n\n    const forecastArr = res.data.forecast.forecastday;\n\n    const forecastObj = forecastArr.map((day) => {\n      const forecastDate = day.date;\n\n      const dateStr = formatDate(forecastDate);\n\n      return (\n        <div className=\"five-day-weather\">\n          <div>\n            <span>{dateStr === time ? \"Today\" : dateStr}</span>\n          </div>\n          <div>\n            <img\n              alt=\"JIMBO\"\n              className=\"jimbo\"\n              src={`http://cdn.weatherapi.com/weather/128x128/day/${day.day.condition.icon.slice(\n                39,\n                42\n              )}.png`}\n            ></img>\n          </div>\n          <div>\n            <span className=\"jimbo-span\">{day.day.mintemp_c}&#8451;</span>\n            <span className=\"jimbo-span\">{day.day.maxtemp_c}&#8451;</span>\n          </div>\n        </div>\n      );\n    });\n\n    return setDay(forecastObj);\n  };\n\n  useEffect(() => {\n    getFut();\n  });\n\n  const handleClick = async (event) => {\n    const res =\n      await axios.get(`https://api.weatherapi.com/v1/current.json?key=e5a89a85ae524d618b391623223006&q=${event}&aqi=no\n`);\n    setTemp(res.data.current.temp_c);\n    setCondition(res.data.current.condition.text);\n    const tim = res.data.location.localtime.slice(0, 10);\n    // const str = tim;\n    // const date = new Date(str);\n    // const today = date.toString().slice(0, 10);\n    const today = formatDate(tim);\n    setTime(today);\n    setCity(res.data.location.name);\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"thirty\">\n        <div className=\"top-ten\">\n          <input\n            type=\"search\"\n            id=\"site-search\"\n            name=\"q\"\n            value={name}\n            onChange={filter}\n            onClick={filter}\n            className=\"fa\"\n            placeholder=\"Search for cities\"\n          />\n          <FontAwesomeIcon\n            className=\"crosshair\"\n            icon={faLocationCrosshairs}\n            onClick={getData}\n          />\n        </div>\n\n        <div className=\"middle-eighty\">\n          <div className=\"weather-img-div\">\n            <img className=\"weather-img\" src={icon} alt=\"jimmy\" />\n          </div>\n          <div className=\"weather-temp-div\">\n            <h1 className=\"weather-temp\">{temp}&#8451;</h1>\n          </div>\n          <div className=\"weather-clim-div\">\n            <h3 className=\"weather-clim\">{condition}</h3>\n          </div>\n          {foundUsers && foundUsers.length > 0 ? (\n            <OutsideClickHandler\n              className=\"JAMES\"\n              onOutsideClick={() => {\n                setFoundUsers(\"\");\n              }}\n            >\n              <div className=\"user-list\">\n                {foundUsers.map((user) => (\n                  <li\n                    className=\"user\"\n                    onClick={() => {\n                      handleClick(user);\n                      setFoundUsers(\"\");\n                      setName(user);\n                    }}\n                  >\n                    <span className=\"user-name\">{user}</span>\n                  </li>\n                ))}\n              </div>\n            </OutsideClickHandler>\n          ) : null}\n        </div>\n        <div className=\"bottom-ten\">\n          <div className=\"bottom-ten-span-div\">\n            <span className=\"day\">Today</span>\n            <span className=\"date\">{time}</span>\n          </div>\n          <div className=\"location-div\">\n            <span>\n              <FontAwesomeIcon icon={faLocationDot} />\n            </span>\n            <span className=\"location-span\">{city}</span>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"seventy\">\n        <div className=\"forty\">\n          <div className=\"seventy-top-twenty\">\n            <div className=\"temp-div\">\n              <span>Celsius</span> <span>Farenheit</span>\n            </div>\n          </div>\n          <div className=\"seventy-eighty\">{day}</div>\n        </div>\n        <div className=\"sixty\">\n          <div className=\"sixty-top-ten\">\n            <h3 className=\"today-h3\">Today's Highlights</h3>\n          </div>\n\n          <div className=\"sixty-middle-seventy\">\n            <div className=\"today-div\">\n              <div>\n                <h4 className=\"today-h4\">Wind Status</h4>{\" \"}\n                <p className=\"today-p\">{wind}mph</p>\n                <div className=\"today-wind\">\n                  {windDirection(direction)}\n                  {direction}\n                </div>\n              </div>\n            </div>\n            <div className=\"today-div\">\n              <div>\n                <h4 className=\"today-h4\">Humidity</h4>{\" \"}\n                <p className=\"today-p\">{humidity}%</p>\n                <div className=\"today-range\">\n                  <PercentageBar bgcolor=\"yellow\" completed={humidity} />\n                </div>\n              </div>\n            </div>\n            <div className=\"today-div\">\n              <div>\n                <h4 className=\"today-h4\">Visibility</h4>{\" \"}\n                <p className=\"today-p\">{visibility}miles</p>\n              </div>\n            </div>\n            <div className=\"today-div\">\n              <div>\n                <h4 className=\"today-h4\">Air Pressure</h4>{\" \"}\n                <p className=\"today-p\">{air}mb</p>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"sixty-bottom-thirty\">\n            <h4>Created by Anthony Radose</h4>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}